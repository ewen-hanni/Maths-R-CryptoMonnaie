full.names = TRUE)
df <- list_of_files %>%
map_dfr(read.csv, header=TRUE, fill=TRUE)
head(df)
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
head(mkt_data$High)
list_of_files <- list.files(path = "C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie",
pattern = "/.csv$",
full.names = TRUE)
df <- list_of_files %>%
map_dfr(read.csv, header=TRUE, fill=TRUE)
head(df)
setwd("C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie")
getwd()
mkt_data <- read.csv("coin_Bitcoin.csv")
str(mkt_data)
mkt_data <- lapply(mkt_data,nullToNA)
#prends une demie éternité :
mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
#head(mkt_data)
head(mkt_data$Date)
head(mkt_data)
head(mkt_data["Date"])
setwd("C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie")
getwd()
mkt_data <- read.csv("coin_Bitcoin.csv")
str(mkt_data)
mkt_data <- lapply(mkt_data,nullToNA)
#prends une demie éternité :
head(mkt_data$Date)
mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
#head(mkt_data)
head(mkt_data$Date)
head(mkt_data)
list_of_files <- list.files(path = "C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie",
pattern = "/.csv$",
full.names = TRUE)
df <- list_of_files %>%
map_dfr(read.csv, header=TRUE, fill=TRUE)
head(df)
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
#template des graph
PlotTemplate = theme(
plot.title = element_text(hjust = .5, size = 28, colour = 'yellow'),
text = element_text(family = 'Garamond'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20, family = 'Garamond', face = 'bold'),
axis.line = element_line(colour = 'grey', size = 1),
panel.grid = element_line(color = 'lightgrey'),
panel.background = element_rect(fill = 'white'),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
mkt_data <- do.call(rbind.data.frame, mkt_data)
# affichage graph
ggplotly(mkt_data %>%
# à retirer pour un graph complet (long à charger)
filter(Date > as.Date('2017-01-01')) %>%
ggplot(aes(Date, Price)) + geom_line(col = 'orange') +
labs(title = 'Bitcoin', x = '') +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000),
labels = c('$0', '$5,000', '$10,000', '$15,000')) + PlotTemplate)
#moyennes, à tester
head(mean( mkt_data$Open))
head(mean( mkt_data$High))
head(mean( mkt_data$Low))
head(mean( mkt_data$Close))
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
library(tidyverse)
library(lubridate)
library(fpp2)
library(astsa)
library(plotly)
library(DIZutils)
windowsFonts(Garamond = windowsFont("Garamond"))
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
NatoNull <- function(x) {
x[sapply(x, is.na)] <- 0
return(x)
}
is_date <- function(date) {
formatted = try(as.Date(date, "%d-%m-%Y"), silent = TRUE)
return(DIZutils::equals2(as.character(formatted), date))
}
setwd("C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie")
getwd()
mkt_data <- read.csv("coin_Bitcoin.csv")
str(mkt_data)
mkt_data <- lapply(mkt_data,nullToNA)
#prends une demie éternité :
head(mkt_data$Date)
mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
#head(mkt_data)
head(mkt_data$Date)
head(mkt_data)
list_of_files <- list.files(path = "C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie",
pattern = "/.csv$",
full.names = TRUE)
df <- list_of_files %>%
map_dfr(read.csv, header=TRUE, fill=TRUE)
head(df)
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
#template des graph
PlotTemplate = theme(
plot.title = element_text(hjust = .5, size = 28, colour = 'yellow'),
text = element_text(family = 'Garamond'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20, family = 'Garamond', face = 'bold'),
axis.line = element_line(colour = 'grey', size = 1),
panel.grid = element_line(color = 'lightgrey'),
panel.background = element_rect(fill = 'white'),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
#mkt_data <- do.call(rbind.data.frame, mkt_data)
# affichage graph
ggplotly(mkt_data %>%
# à retirer pour un graph complet (long à charger)
filter(Date > as.Date('2017-01-01')) %>%
ggplot(aes(Date, Price)) + geom_line(col = 'orange') +
labs(title = 'Bitcoin', x = '') +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000),
labels = c('$0', '$5,000', '$10,000', '$15,000')) + PlotTemplate)
#moyennes, à tester
head(mean( mkt_data$Open))
head(mean( mkt_data$High))
head(mean( mkt_data$Low))
head(mean( mkt_data$Close))
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
library(tidyverse)
library(lubridate)
library(fpp2)
library(astsa)
library(plotly)
library(DIZutils)
windowsFonts(Garamond = windowsFont("Garamond"))
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
NatoNull <- function(x) {
x[sapply(x, is.na)] <- 0
return(x)
}
is_date <- function(date) {
formatted = try(as.Date(date, "%d-%m-%Y"), silent = TRUE)
return(DIZutils::equals2(as.character(formatted), date))
}
setwd("C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie")
getwd()
mkt_data <- read.csv("coin_Bitcoin.csv")
str(mkt_data)
mkt_data <- lapply(mkt_data,nullToNA)
#prends une demie éternité :
head(mkt_data$Date)
#mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
head(mkt_data$Date)
head(mkt_data)
list_of_files <- list.files(path = "C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie",
pattern = "/.csv$",
full.names = TRUE)
df <- list_of_files %>%
map_dfr(read.csv, header=TRUE, fill=TRUE)
head(df)
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
#template des graph
PlotTemplate = theme(
plot.title = element_text(hjust = .5, size = 28, colour = 'yellow'),
text = element_text(family = 'Garamond'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20, family = 'Garamond', face = 'bold'),
axis.line = element_line(colour = 'grey', size = 1),
panel.grid = element_line(color = 'lightgrey'),
panel.background = element_rect(fill = 'white'),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
#mkt_data <- do.call(rbind.data.frame, mkt_data)
# affichage graph
ggplotly(mkt_data %>%
# à retirer pour un graph complet (long à charger)
filter(Date > as.Date('2017-01-01')) %>%
ggplot(aes(Date, Price)) + geom_line(col = 'orange') +
labs(title = 'Bitcoin', x = '') +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000),
labels = c('$0', '$5,000', '$10,000', '$15,000')) + PlotTemplate)
#moyennes, à tester
head(mean( mkt_data$Open))
head(mean( mkt_data$High))
head(mean( mkt_data$Low))
head(mean( mkt_data$Close))
mkt_data$Date<- mdy(mkt_data$Date)
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
library(tidyverse)
library(lubridate)
library(fpp2)
library(astsa)
library(plotly)
library(DIZutils)
windowsFonts(Garamond = windowsFont("Garamond"))
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
NatoNull <- function(x) {
x[sapply(x, is.na)] <- 0
return(x)
}
is_date <- function(date) {
formatted = try(as.Date(date, "%d-%m-%Y"), silent = TRUE)
return(DIZutils::equals2(as.character(formatted), date))
}
setwd("C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie")
getwd()
mkt_data <- read.csv("coin_Bitcoin.csv")
str(mkt_data)
mkt_data <- lapply(mkt_data,nullToNA)
#prends une demie éternité :
head(mkt_data$Date)
#mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
head(mkt_data)
mkt_data$Date<- mdy(mkt_data$Date)
list_of_files <- list.files(path = "C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie",
pattern = "/.csv$",
full.names = TRUE)
df <- list_of_files %>%
map_dfr(read.csv, header=TRUE, fill=TRUE)
head(df)
#template des graph
PlotTemplate = theme(
plot.title = element_text(hjust = .5, size = 28, colour = 'yellow'),
text = element_text(family = 'Garamond'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20, family = 'Garamond', face = 'bold'),
axis.line = element_line(colour = 'grey', size = 1),
panel.grid = element_line(color = 'lightgrey'),
panel.background = element_rect(fill = 'white'),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
#mkt_data <- do.call(rbind.data.frame, mkt_data)
# affichage graph
ggplotly(mkt_data %>%
# à retirer pour un graph complet (long à charger)
filter(Date > as.Date('2017-01-01')) %>%
ggplot(aes(Date, Price)) + geom_line(col = 'orange') +
labs(title = 'Bitcoin', x = '') +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000),
labels = c('$0', '$5,000', '$10,000', '$15,000')) + PlotTemplate)
#moyennes,
head(mean( mkt_data$Open))
head(mean( mkt_data$High))
head(mean( mkt_data$Low))
head(mean( mkt_data$Close))
mkt_data<- dmy(Date)
mkt_data$Date<- dmy(Date)
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
Date
head(mkt_data$Date)
head(mkt_data$Date)
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
print("////////////////////////////////////////////////////////////////////////////")
library(tidyverse)
library(lubridate)
library(fpp2)
library(astsa)
library(plotly)
library(DIZutils)
windowsFonts(Garamond = windowsFont("Garamond"))
nullToNA <- function(x) {
x[sapply(x, is.null)] <- NA
return(x)
}
NatoNull <- function(x) {
x[sapply(x, is.na)] <- 0
return(x)
}
is_date <- function(date) {
formatted = try(as.Date(date, "%d-%m-%Y"), silent = TRUE)
return(DIZutils::equals2(as.character(formatted), date))
}
setwd("C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie")
getwd()
mkt_data <- read.csv("coin_Bitcoin.csv")
str(mkt_data)
mkt_data <- lapply(mkt_data,NatoNull)
head(mkt_data$Date)
#mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
head(mkt_data)
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
list_of_files <- list.files(path = "C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie",
pattern = "/.csv$",
full.names = TRUE)
df <- list_of_files %>%
map_dfr(read.csv, header=TRUE, fill=TRUE)
head(df)
#template des graph
PlotTemplate = theme(
plot.title = element_text(hjust = .5, size = 28, colour = 'yellow'),
text = element_text(family = 'Garamond'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20, family = 'Garamond', face = 'bold'),
axis.line = element_line(colour = 'grey', size = 1),
panel.grid = element_line(color = 'lightgrey'),
panel.background = element_rect(fill = 'white'),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
#mkt_data <- do.call(rbind.data.frame, mkt_data)
# affichage graph
ggplotly(mkt_data %>%
# à retirer pour un graph complet (long à charger)
filter(Date > as.Date('2017-01-01')) %>%
ggplot(aes(Date, Price)) + geom_line(col = 'orange') +
labs(title = 'Bitcoin', x = '') +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000),
labels = c('$0', '$5,000', '$10,000', '$15,000')) + PlotTemplate)
#moyennes,
head(mean( mkt_data$Open))
head(mean( mkt_data$High))
head(mean( mkt_data$Low))
head(mean( mkt_data$Close))
head(mkt_data$Date)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High))
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
# affichage graph
ggplotly(mkt_data %>%
# à retirer pour un graph complet (long à charger)
filter(Date > as.Date('2017-01-01')) %>%
ggplot(aes(Date, Price)) + geom_line(col = 'orange') +
labs(title = 'Bitcoin', x = '') +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000),
labels = c('$0', '$5,000', '$10,000', '$15,000')) + PlotTemplate)
#moyennes,
#template des graph
PlotTemplate = theme(
plot.title = element_text(hjust = .5, size = 28, colour = 'yellow'),
text = element_text(family = 'Garamond'),
axis.text = element_text(size = 12),
axis.title = element_text(size = 20, family = 'Garamond', face = 'bold'),
axis.line = element_line(colour = 'grey', size = 1),
panel.grid = element_line(color = 'lightgrey'),
panel.background = element_rect(fill = 'white'),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
#mkt_data <- do.call(rbind.data.frame, mkt_data)
# affichage graph
ggplotly(mkt_data %>%
# à retirer pour un graph complet (long à charger)
filter(Date > as.Date('2017-01-01')) %>%
ggplot(aes(Date, Price)) + geom_line(col = 'orange') +
labs(title = 'Bitcoin', x = '') +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000),
labels = c('$0', '$5,000', '$10,000', '$15,000')) + PlotTemplate)
#moyennes,
head(mean( mkt_data$Open))
head(mean( mkt_data$High))
head(mean( mkt_data$Low))
head(mean( mkt_data$Close))
head(mkt_data)
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
Date %>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
# calculons le percentage de colonnes contenantes des NA
#apply(mkt_data[2:ncol(bd)], 2, function(x) (trunc(10000*sum(is.na(x))/length(x))/100))
# calculons le percentage de lignes contenantes des donnÃ©es manquantes
#trunc(10000*sum(apply(mkt_data[2:ncol(bd)], 1, function(x) sum(is.na(x))>0))/nrow(mkt_data))/100
#bd
head(mkt_data$Date)
head(mkt_data$High)
head(dim(mkt_data$High))
head(dim(mkt_data$Date))
head(dim(mkt_data$Date))
#mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
head(mkt_data$Date)
#mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
head(mkt_data$Date)
#mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
head(length(mkt_data$Date))
#mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
head(length(mkt_data$High))
apply(mkt_data[2:ncol(mkt_data)], 2, function(x) (trunc(10000*sum(is.na(x))/length(x))/100))
ggplotly(mkt_data %>%
# à retirer pour un graph complet (long à charger)
filter(Date > as.Date('2017-01-01')) %>%
ggplot(aes(Date, Price)) + geom_line(col = 'orange') +
labs(title = 'Bitcoin', x = '') +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000),
labels = c('$0', '$5,000', '$10,000', '$15,000')) + PlotTemplate)
mkt_data <- do.call(rbind.data.frame, mkt_data)
mkt_data <- do.call(rbind.data.frame, mkt_data)
ggplotly(mkt_data %>%
# à retirer pour un graph complet (long à charger)
filter(Date > as.Date('2017-01-01')) %>%
ggplot(aes(Date, Price)) + geom_line(col = 'orange') +
labs(title = 'Bitcoin', x = '') +
scale_y_continuous(breaks = c(0, 5000, 10000, 15000),
labels = c('$0', '$5,000', '$10,000', '$15,000')) + PlotTemplate)
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
mutate(Date = mdy(Date))%>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
head(mkt_data$Date)
setwd("C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie")
getwd()
mkt_data <- read.csv("coin_Bitcoin.csv")
str(mkt_data)
mkt_data <- lapply(mkt_data,NatoNull)
head(mkt_data$Date)
#mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
head(length(mkt_data$High))
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
mutate(Date = mdy(Date))%>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
setwd("C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie")
getwd()
mkt_data <- read.csv("coin_Bitcoin.csv")
str(mkt_data)
mkt_data <- lapply(mkt_data,NatoNull)
head(mkt_data$Date)
#mkt_data <- do.call(rbind,lapply(mkt_data,data.frame,stringsAsFactors=FALSE))
head(length(mkt_data$High))
mkt_data <- do.call(rbind.data.frame, mkt_data)
# le tibble (≈petit df)
bit_df = mkt_data %>%
#mutate(Date = dmy(Date)) %>%
mutate(Date = mdy(Date))%>%
mutate(Volume = as.numeric(str_sub(Volume, end = -2))*1000,
High = as.numeric(High)) %>%
arrange(unlist(mdy(Date)))
head(mkt_data$Date)
setwd("C:/Users/Ewen/Documents/GitHub/Maths-R-CryptoMonnaie")
getwd()
mkt_data <- read.csv("coin_Bitcoin.csv")
str(mkt_data)
mkt_data <- lapply(mkt_data,NatoNull)
head(mkt_data$Date)
setwd("C:/Users/Ewen/Documents/GitHub/Bitcoin Historical Data.csv")
setwd("C:/Users/Ewen/Documents/GitHub/Bitcoin Historical Data.csv")
